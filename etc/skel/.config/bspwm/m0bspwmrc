#! /bin/sh

## Environments
export PATH="${PATH}:${HOME}/.config/bspwm/bin"

# Parse colors from "~/.Xresources"
xrdb -override "${HOME}/.Xresources"

xrdb_query()
{
    [ -n "$XRDB_QUERY" ] || XRDB_QUERY="$(xrdb -query)"

    echo "$XRDB_QUERY" | while IFS=';' read -r STRING; do
        [ "${1}" = "${STRING%%\	*}" ] || continue
        echo "${STRING##*\	}"
        break
    done
}

getcolors()
{
    #FOREGROUND="$(xrdb_query '*.foreground:')"
    BACKGROUND="$(xrdb_query '*.background:')"
    #BLACK="$(xrdb_query '*.color0:')"
    #RED="$(xrdb_query '*.color1:')"
    #GREEN="$(xrdb_query '*.color2:')"
    #YELLOW="$(xrdb_query '*.color3:')"
    #BLUE="$(xrdb_query '*.color4:')"
    #MAGENTA="$(xrdb_query '*.color5:')"
    #CYAN="$(xrdb_query '*.color6:')"
    #WHITE="$(xrdb_query '*.color7:')"
}

getcolors

# core
rule() { bspc rule -a "$@" & }
config() { bspc config "$@" & }

pgrep -x sxhkd > /dev/null || sxhkd &
vmware-user-suid-wrapper
vmhgfs-fuse -o allow_other -o auto_unmount .host:/shared ${HOME}/shared

# Run EWW.
$HOME/.local/bin/eww -c $HOME/.config/eww/bar --restart open bar &

# Run notification daemon.
dunst --config $HOME/.config/dunst/dunstrc &

# Run Picom.
picom &

# Execute bspwm-specific scripts.
bspfloat &

#bspc config pointer_modifier mod1

NOTE=$(xrandr -q | grep -w connected | cut -d ' ' -f1 | head -n1)
MONITOR=$(xrandr -q | grep -w connected | cut -d ' ' -f1 | tail -n1)
MONITOR_CONN=$(xrandr -q | grep 'HDMI' | grep -w connected | wc -l)

if [ $MONITOR_CONN -gt 0 ]; then
		xrandr --output "$MONITOR" --primary --mode 3440x1440 --rotate normal --output "$NOTE" --mode 2560x1440 --rotate normal --right-of "$MONITOR"
		bspc monitor "$MONITOR" -d I II III IV V
		bspc monitor "$NOTE" -d VI VII VIII IX X
else
		#bspc monitor -d I II III IV V VI VII VIII IX X
		bspc monitor -d 1 2 3 4 5 6
fi

#bspc config border_width         2
#bspc config window_gap          12
#
#bspc config split_ratio          0.52
#bspc config borderless_monocle   true
#bspc config gapless_monocle      true

# ##############################################################################
# #                            GENERAL CONFIGURATION                           #
# ##############################################################################

bspc subscribe node_state | while read -r _ _ _ _ state flag; do
    if [ "$state" != "fullscreen" ]; then
        continue
    fi
    if [ "$flag" == on ]; then
        $HOME/.local/bin/eww -c $HOME/.config/eww/bar close-all
  else
        $HOME/.local/bin/eww -c $HOME/.config/eww/bar open bar
    fi
done &

config left_padding 46
config border_width 4
config window_gap 10
config split_ratio 0.50

config borderless_monocle true
config gapless_monocle true
config focus_follows_pointer true

bspc config normal_border_color "$BACKGROUND"
bspc config focused_border_color "$BACKGROUND"
config presel_feedback_color "$BACKGROUND"
pkill borders ; borders &

windowwidth=2240
windowheight=1097

screenwidth=$(xdpyinfo | awk -F'[ x]+' '/dimensions:/{print $3}')
screenheight=$(xdpyinfo | awk -F'[ x]+' '/dimensions:/{print $4}')
windowx=$(("$screenwidth" / 2 - "$windowwidth" / 2))
windowy=$(("$screenheight" / 2 -"$windowheight" / 2))

#bspc rule -a 'Alacritty Floating' state=floating
bspc rule -a 'Kitty Floating' state=floating rectangle="$windowwidth"x"$windowheight"+"$windowx"+"$windowy"
bspc rule -a 'Google-chrome' state=floating
bspc rule -a Gimp desktop='^8' state=floating follow=on
bspc rule -a Chromium desktop='^2'
bspc rule -a mplayer2 state=floating
bspc rule -a Kupfer.py focus=on
bspc rule -a Screenkey manage=off
xfce4-power-manager &
${HOME}/.fehbg
compton &
/usr/bin/numlockx on
#${HOME}/.config/polybar/launch.sh &
wmname LG3D
xsetroot -cursor_name left_ptr &
setxkbmap us_intl
xsettingsd &
ulauncher --hide-window &
